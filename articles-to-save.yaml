---
articles-to-save:
  # - Title:
  #   Author:
  #   Blog:
  #   Category: 
  #   Link: 
  #   Summary: > 
  #   Year:

  - Title: 'FAQ: Why Story points? Why not map story points with time? What’s the issue?'
    Author: ShriKant Vashishtha
    Blog: Agile Buddha
    Category: 
      - Agile
      - Software
    Link: http://www.agilebuddha.com/agile/faq-why-story-points-why-not-map-story-points-with-time-whats-the-issue/
    Summary: > 
      Why use story points for stories instead of estimates based on time?
    Year: 2017

  - Title: OutcomeOverOutput
    Author:
    Blog:
    Category:
      - Software
      - Project Management
    Link: https://martinfowler.com/bliki/OutcomeOverOutput.html
    Summary: > 
      Why your software project should focus on real life outcomes, not amount of code/features outputted. 
    Year: 2020

  - Title: Serverless Applications Lens - AWS Well-Architected Framework
    Author: AWS
    Blog: AWS Well Architected
    Category: 
      - AWS
      - Long-form
      - Serverless
    Link: https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/wellarchitected-serverless-applications-lens.pdf#welcome
    Summary: > 
      In this “Lens” we focus on how to design, deploy, and architect your serverless application workloads
      in the AWS Cloud.
    Year: 2019
    PDF: ./PDFs/wellarchitected-serverless-applications-lens.pdf

  - Title: The Testing Pyramid
    Author: Hibri Marzook
    Blog: Medium
    Category: 
      - Software
      - Testing
    Link: https://medium.com/contino-engineering/knowthe-testing-pyramid-42a4b3573988
    Summary: > 
      Summary of the testing pyramid, describing manual, smoke, integration, acceptance, and unit tests  
    Year: 2019

  - Title: The Practical Test Pyramid
    Author: Ham Vocke
    Blog: MartinFowler.com
    Category:   
      - Software
      - Testing
    Link: https://martinfowler.com/articles/practical-test-pyramid.html
    Summary: > 
      Summary of the testing pyramid and importance of test automation
    Year: 2018

  - Title: ContractTest
    Author: Martin Fowler
    Blog: MartinFowler.com
    Category: 
      - Software
      - Testing
      - Contract Testing
    Link: https://martinfowler.com/bliki/ContractTest.html
    Summary: > 
      A summary of contract testing
    Year: 2011

  - Title: Embrace the Grind
    Author: Jacob Kaplan-Moss
    Blog: Jacob Kaplan-Moss
    Category: 
      - Career Advice
    Link: https://jacobian.org/2021/apr/7/embrace-the-grind/
    Summary: > 
      How to be successful? Work hard. 
    Year: 2021

  - Title: The worst so-called “best practice” for Docker
    Author: Itamar Turner-Trauring
    Blog: Python Speed
    Category:
      - Security
      - Docker
    Link: https://pythonspeed.com/articles/security-updates-in-docker/
    Summary: > 
      A list of common docker best practices which are no longer best practice 
    Year: 2021

  - Title: The Three Modes of TDD
    Author: Grzegorz Ziemoński
    Blog: DZone
    Category: 
      - Software
      - Testing
      - TDD
    Link: https://dzone.com/articles/three-modes-of-tdd
    Summary: > 
      Summary of the three ways of going green as described by Kent Beck in TDD by Example
    Year: 2016

  - Title: 'Trunk Based Development: Introduction'
    Author: Paul Hammant
    Blog: Trunk Based Development
    Category: 
      - Software
      - DevOps
      - Git
    Link: https://trunkbaseddevelopment.com/
    Summary: > 
      Introduction to Trunk based development, GitHub flow, ect
    Year: 2017

  - Title: 'ARRANGE-ACT-ASSERT: A PATTERN FOR WRITING GOOD TESTS'
    Author: Andrew Knight
    Blog: Automation Panda
    Category: 
      - Software
      - TDD
    Link: https://automationpanda.com/2020/07/07/arrange-act-assert-a-pattern-for-writing-good-tests/
    Summary: > 
      Summary of Arrange-Act-Assert
    Year: 2020

  - Title: What are DoD and DoR in Scrum?
    Author: Matthias Orgler
    Blog: Medium
    Category:  
      - Agile
      - Software
    Link: https://orgler.medium.com/what-are-dod-and-dor-in-scrum-14894e0b3d0d
    Summary: > 
      Overview of Definition of Done and Definition of Ready
    Year: 2018

  - Title: An introduction to value stream mapping and analysis
    Author: Jostein Langstrand
    Blog: Digitala Vetenskapliga Arkivet
    Category:  
      - Lean
      - VSM
    Link: https://www.diva-portal.org/smash/get/diva2:945581/FULLTEXT01.pdf
    Summary: > 
      A good intro to VSM. Helped me to really understand how to make a VSM. Good definition of terms, a bit lacking on definitions of symbols.
    Year: 2016
    PDF: ./PDFs/An-introduction-to-vsm.pdf

  - Title: Value Stream Mapping Symbols and Icons
    Blog: Lucid Chart
    Category:  
      - Lean
      - VSM
    Link: https://www.lucidchart.com/pages/value-stream-mapping/value-stream-mapping-symbols
    Summary: > 
      Better overview of VSM symbols

  - Title: What are NOT User Stories?
    Author: David Pereira
    Blog: Serious Scrum
    Category:
      - Agile
      - Story Pointing
    Link: https://medium.com/serious-scrum/what-are-not-user-stories-85128be0c7bb
    Summary: >
      A good overview of how to write a user story. User story describes a real user's problem. It is up to the dev team to decide how to solve it. User Story does not prescribe how to solve the problem, although team members may add comments on potential solutions prior to starting.
      A user story is not a task. "Setup backups for the application DB" is a task, not a user story. 
      Examples of things which are note stories:
        - "Technical requirement: As the Development Team, we want to update our Angular version to have the newest components."
        - "Bugs: As a User, I want to ensure the Paypal payment works to pay my orders with Paypal."
       - "Technical Debt: As the Development Team, we want to refactor the invoice code to maintain it."
      "A good User Story should represent a problem to solve, instead of a solution to deliver."
      “Your job isn’t to build more software faster: it’s to maximize the outcome and impact you get from what you choose to build.”
      ― Jeff Patton, User Story Mapping: Discover the Whole Story, Build the Right Product
    Year: 2020
      
  - Title: Why Estimating Stories In Agile Is Painful, Part 1
    Author: Tim Brizard
    Blog: Blizzard Computing
    Category:
      - Agile
      - Story Pointing
    Link: https://blizzardcomputing.com/wp/blog/index.php/2016/06/27/why-estimating-stories-in-agile-is-painful-part-1/
    Summary: >
      - Stories should not be estimated in time, this never works well.
      - Creating a "One size fits all" story pointing strategy in an organization never works well and will break relativity
      - Relative sizing is how estimation should be handled. 
          - Story points come from comparing the story to a "golden story" or another previously estimated story and deciding how much effort it is compared to the previous story.
      - Don't over estimate. A team doesn't need to know every detail to estimate a story, it should be a quick and rough estimate. 
      - Keep 3 things in mind when estimating a user story: risk, complexity, and effort.
      - If your company is forcing you to estimate based on hours, don't use story points, drop them and just use hours.
        - Fight this if you can
    Year: 2016

  - Title: Introducing Example Mapping - Video 
    Link: https://www.youtube.com/watch?v=VwvrGfWmG_U
...
