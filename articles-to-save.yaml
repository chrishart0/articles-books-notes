---
articles-to-save:
  # - Title:
  #   Author:
  #   Blog:
  #   Category: 
  #   Link: 
  #   Summary: > 
  #   Year:

  - Title: 'FAQ: Why Story points? Why not map story points with time? What’s the issue?'
    Author: ShriKant Vashishtha
    Blog: Agile Buddha
    Category: 
      - Agile
      - Software
    Link: http://www.agilebuddha.com/agile/faq-why-story-points-why-not-map-story-points-with-time-whats-the-issue/
    Summary: > 
      Why use story points for stories instead of estimates based on time?
    Year: 2017

  - Title: OutcomeOverOutput
    Author:
    Blog:
    Category:
      - Software
      - Project Management
    Link: https://martinfowler.com/bliki/OutcomeOverOutput.html
    Summary: > 
      Why your software project should focus on real life outcomes, not amount of code/features outputted. 
    Year: 2020

  - Title: Serverless Applications Lens - AWS Well-Architected Framework
    Author: AWS
    Blog: AWS Well Architected
    Category: 
      - AWS
      - Long-form
      - Serverless
    Link: https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/wellarchitected-serverless-applications-lens.pdf#welcome
    Summary: > 
      In this “Lens” we focus on how to design, deploy, and architect your serverless application workloads
      in the AWS Cloud.
    Year: 2019
    PDF: ./PDFs/wellarchitected-serverless-applications-lens.pdf

  - Title: The Testing Pyramid
    Author: Hibri Marzook
    Blog: Medium
    Category: 
      - Software
      - Testing
    Link: https://medium.com/contino-engineering/knowthe-testing-pyramid-42a4b3573988
    Summary: > 
      Summary of the testing pyramid, describing manual, smoke, integration, acceptance, and unit tests  
    Year: 2019

  - Title: The Practical Test Pyramid
    Author: Ham Vocke
    Blog: MartinFowler.com
    Category:   
      - Software
      - Testing
    Link: https://martinfowler.com/articles/practical-test-pyramid.html
    Summary: > 
      Summary of the testing pyramid and importance of test automation
    Year: 2018

  - Title: ContractTest
    Author: Martin Fowler
    Blog: MartinFowler.com
    Category: 
      - Software
      - Testing
      - Contract Testing
    Link: https://martinfowler.com/bliki/ContractTest.html
    Summary: > 
      A summary of contract testing
    Year: 2011

  - Title: Embrace the Grind
    Author: Jacob Kaplan-Moss
    Blog: Jacob Kaplan-Moss
    Category: 
      - Career Advice
    Link: https://jacobian.org/2021/apr/7/embrace-the-grind/
    Summary: > 
      How to be successful? Work hard. 
    Year: 2021

  - Title: The worst so-called “best practice” for Docker
    Author: Itamar Turner-Trauring
    Blog: Python Speed
    Category:
      - Security
      - Docker
    Link: https://pythonspeed.com/articles/security-updates-in-docker/
    Summary: > 
      A list of common docker best practices which are no longer best practice 
    Year: 2021

  - Title: The Three Modes of TDD
    Author: Grzegorz Ziemoński
    Blog: DZone
    Category: 
      - Software
      - Testing
      - TDD
    Link: https://dzone.com/articles/three-modes-of-tdd
    Summary: > 
      Summary of the three ways of going green as described by Kent Beck in TDD by Example
    Year: 2016

  - Title: 'Trunk Based Development: Introduction'
    Author: Paul Hammant
    Blog: Trunk Based Development
    Category: 
      - Software
      - DevOps
      - Git
    Link: https://trunkbaseddevelopment.com/
    Summary: > 
      Introduction to Trunk based development, GitHub flow, ect
    Year: 2017

  - Title: 'ARRANGE-ACT-ASSERT: A PATTERN FOR WRITING GOOD TESTS'
    Author: Andrew Knight
    Blog: Automation Panda
    Category: 
      - Software
      - TDD
    Link: https://automationpanda.com/2020/07/07/arrange-act-assert-a-pattern-for-writing-good-tests/
    Summary: > 
      Summary of Arrange-Act-Assert
    Year: 2020

  - Title: What are DoD and DoR in Scrum?
    Author: Matthias Orgler
    Blog: Medium
    Category:  
      - Agile
      - Software
    Link: https://orgler.medium.com/what-are-dod-and-dor-in-scrum-14894e0b3d0d
    Summary: > 
      Overview of Definition of Done and Definition of Ready
    Year: 2018

  - Title: An introduction to value stream mapping and analysis
    Author: Jostein Langstrand
    Blog: Digitala Vetenskapliga Arkivet
    Category:  
      - Lean
      - VSM
    Link: https://www.diva-portal.org/smash/get/diva2:945581/FULLTEXT01.pdf
    Summary: > 
      A good intro to VSM. Helped me to really understand how to make a VSM. Good definition of terms, a bit lacking on definitions of symbols.
    Year: 2016
    PDF: ./PDFs/An-introduction-to-vsm.pdf

  - Title: Value Stream Mapping Symbols and Icons
    Blog: Lucid Chart
    Category:  
      - Lean
      - VSM
    Link: https://www.lucidchart.com/pages/value-stream-mapping/value-stream-mapping-symbols
    Summary: > 
      Better overview of VSM symbols

  - Title: What are NOT User Stories?
    Author: David Pereira
    Blog: Serious Scrum
    Category:
      - Agile
      - Story Pointing
    Link: https://medium.com/serious-scrum/what-are-not-user-stories-85128be0c7bb
    Summary: >
      A good overview of how to write a user story. User story describes a real user's problem. It is up to the dev team to decide how to solve it. User Story does not prescribe how to solve the problem, although team members may add comments on potential solutions prior to starting.
      A user story is not a task. "Setup backups for the application DB" is a task, not a user story. 
      Examples of things which are note stories:
        - "Technical requirement: As the Development Team, we want to update our Angular version to have the newest components."
        - "Bugs: As a User, I want to ensure the Paypal payment works to pay my orders with Paypal."
       - "Technical Debt: As the Development Team, we want to refactor the invoice code to maintain it."
      "A good User Story should represent a problem to solve, instead of a solution to deliver."
      “Your job isn’t to build more software faster: it’s to maximize the outcome and impact you get from what you choose to build.”
      ― Jeff Patton, User Story Mapping: Discover the Whole Story, Build the Right Product
    Year: 2020
      
  - Title: Why Estimating Stories In Agile Is Painful, Part 1
    Author: Tim Brizard
    Blog: Blizzard Computing
    Category:
      - Agile
      - Story Pointing
    Link: https://blizzardcomputing.com/wp/blog/index.php/2016/06/27/why-estimating-stories-in-agile-is-painful-part-1/
    Summary: >
      - Stories should not be estimated in time, this never works well.
      - Creating a "One size fits all" story pointing strategy in an organization never works well and will break relativity
      - Relative sizing is how estimation should be handled. 
          - Story points come from comparing the story to a "golden story" or another previously estimated story and deciding how much effort it is compared to the previous story.
      - Don't over estimate. A team doesn't need to know every detail to estimate a story, it should be a quick and rough estimate. 
      - Keep 3 things in mind when estimating a user story: risk, complexity, and effort.
      - If your company is forcing you to estimate based on hours, don't use story points, drop them and just use hours.
        - Fight this if you can
    Year: 2016
  
  - Title: Story Points Revisited
    Author: Ron Jefferies
    Blog: Ron Jefferies
    Category:
      - Agile
      - XP
      - History
      - Story Pointing
    Link: https://ronjeffries.com/articles/019-01ff/story-points/Index.html
    Summary: >
      - Story points originally come from XP, later adopted by Scrum
        - Not actually mentioned anywhere in the Scrum guide
      - Stories were originally estimated in time
        - Then moved to "ideal days" which was full, unbothered, working days
        - Ideal days evolved into "points" to limit confusion
      - Useful specifically to decide how much work to take into an iteration
      - Do not use story points / velocity to compare teams or try to normalize story points across teams
      - Story points should be determined using relative estimation
      - Managers should not try to compare estimated points to actuals values
        - Should instead focus on value produced, not work done
      - Story estimates aren't the end all be all. Focus on delivering value, you may not even need story points
      - Focus on completing small but valuable pieces of work
        - Practice good story slicing
    Year: 2019

  - Title: Introducing Example Mapping - Video 
    Link: https://www.youtube.com/watch?v=VwvrGfWmG_U

  - Title: Job Stories Offer a Viable Alternative to User Stories
    Author: Mike Cohn
    Blog: Mountain Goat Software
    Category:
      - Agile
      - Story
    Link: https://www.mountaingoatsoftware.com/blog/job-stories-offer-a-viable-alternative-to-user-stories
    Summary: >
      - Job Stories are an acceptable alternative to User Stories
    Year: 2019

  - Title: Introducing Example Mapping - Video 
    Link: https://www.youtube.com/watch?v=VwvrGfWmG_U

  - Title: Job Stories Offer a Viable Alternative to User Stories
    Author: Ron Jeffries
    Blog: Ron Jeffries
    Category:
      - Agile
      - Story points
    Link: https://ronjeffries.com/articles/019-01ff/story-points/Index.html
    Summary: >
      - Key Takeaways
        - You are what you measure; if management care more about the measure of velocity than value delivered, teams will spend more time focusing on points than on value.
        - For releases, pick a date and put into it what is done, don't try and pick new features before the release date and squeeze them in
        - Don't waist time estimating, just slice your stories small, ideally less than a day in size
        - Story points can be value, but not highly valuable.
      - Ron Jeffries possibly coined the term *story points*
      - Story points evolved in this manner in XP: time -> ideal time -> story points
      - Story points were invested as a way to get managers off the dev team's back asking about why it is taking 3 days to complete something marked as 1 day's worth of work
      - "Do you really regret they were invented, or do you simply deplore their misuse when relative sizing is not properly understood?"
        - "I certainly deplore their misuse"
        - "I think using them to predict 'when we’ll be done' is at best a weak idea;"
        - "I think tracking how actuals compare with estimates is at best wasteful;"
        - "I think comparing teams on quality of estimates or velocity is harmful."
      - Anti-patterns
        - Comparing teams
          - Even if a story is the same, 2 teams with 2 different sets of people and 2 different environments will have 2 different tasks in front of them
        - Managers Tracking estimates
          - Managers are too tempted to track story points and encourage "better estimating"
        - Predicting Done
          - Why spend time trying to predict when something will be done when you could be working on doing the thing?
      - Most important thing in agile should be "pick the next few things to do, and do them promptly"
        - "Doing them quickly comes down to doing small slices of high value, and iterating rapidly"
        - "Story cost estimation doesn’t help much with that, if at all."
        - "So if the existence of an estimate causes management to take their eye off the ball of value and instead focus on improving estimates, it takes attention from the central purpose, which is to deliver real value quickly."
      - More value doesn't come from estimates, it comes from doing small, valuable, things frequently
      - The business may require you to do some form of predicting releases for legitimate reasons
        - Likely, you won't have stories broken out that far into the future for everything the business wants predicted
    Year: 2019
  
  - Title: You Are Using Story Points Wrong, How to Make Story Points Suck Less
    Author: Chris Hart
    Blog: Contino Engineering Blog
    Category:
      - Agile
      - Story points
    Link: https://medium.com/contino-engineering/you-are-using-story-points-wrong-how-to-make-story-points-suck-less-c641c34ce63
    Year: 2021

  - Title: Behind Every Great Product
    Author: Marty Cagan
    Blog: Silicon Valley Product Group
    Category:
      - Product
      - Product Manager
    Link: https://svpg.com/behind-every-great-product/
    Summary: >
      - Product Owner and Product Manager are not the same thing
        - There is a lot of confusion out there about this
      - Examples of good product managers
    Year: 2016
...
